@page "/upload"
@using Microsoft.AspNetCore.Components.Forms
@using OKC.Infrastructure.Services
@inject FileProcessingService FileProcessor
@inject NavigationManager Navigation

<h3>Загрузка вопросов</h3>

@if (isProcessing)
{
	<div class="processing-indicator">
		<div class="spinner"></div>
		<p>Обработка файлов: @processedFiles из @totalFiles</p>
	</div>
}
else
{
	<InputFile OnChange="@OnInputFileChange" multiple />
	<button onclick="@ProcessFiles" disabled="@(files.Count == 0)" class="btn btn-primary mt-3">
		Загрузить и обработать (@files.Count)
	</button>
    
	@if (errorMessage != null)
	{
		<div class="alert alert-danger mt-3">@errorMessage</div>
	}
}

@code {
	private List<IBrowserFile> files = new();
	private bool isProcessing;
	private int totalFiles;
	private int processedFiles;
	private string errorMessage;

	private void OnInputFileChange(InputFileChangeEventArgs e)
	{
		files.AddRange(e.GetMultipleFiles());
	}

	private async Task ProcessFiles()
	{
		try
		{
			isProcessing = true;
			totalFiles = files.Count;
			processedFiles = 0;
            
			await FileProcessor.ProcessFiles(files);
            
			// Переходим на страницу поиска
			Navigation.NavigateTo("/search");
		}
		catch (Exception ex)
		{
			errorMessage = $"Ошибка обработки: {ex.Message}";
		}
		finally
		{
			isProcessing = false;
			files.Clear();
			StateHasChanged();
		}
	}
}